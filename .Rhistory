summarise(accuracy_overall = sum(compas_correct) / n())
accuracy_black <- broward_clean |>
filter(race == 2)|>
summarise(accuracy_black = sum(compas_correct) / n())
accuracy_white <- broward_clean |>
filter(race == 1)|>
summarise(accuracy_white = sum(compas_correct) / n())
broward_clean <- broward_clean |>
mutate(race = case_when(
race == 1 ~ "White",
race == 2 ~ "Black",
race == 3 ~ "Hispanic",
race == 4 ~ "Asian",
race == 5 ~ "Native American",
race == 6 ~ "Other"
))
broward_clean |>
group_by(race)|>
summarize(
race_accuracy = sum(compas_correct) / n(),
false_pos = sum(compas_correct == 0 & compas_guess == 1) / (sum(two_year_recid == 0)),
false_neg = sum(compas_correct == 0 & compas_guess == 0) / (sum(two_year_recid == 1))
) |>
mutate(
accuracy_overall = 0.654
)|>
filter(race %in% c("Black", "White"))
library(tidyverse)
library(rsample)
library(glmnet)
library(glmnetUtils)
library(glue)
library(gt)
library(dplyr)
library(summarytools)
library(gtsummary)
broward_clean <- read_csv("allData/BROWARD_CLEAN.csv")
charges <- read_csv("allData/CHARGE_ID.csv")
#mturk_predictions <- read_csv("allData/MTURK_RACE.csv")
demographics <- read_csv("allData/MTURK_RACE_DEMOGRAPHICS.csv")
#Summary Statistics - Table 1.1
mean_age <- mean(broward_clean$age)
mean_juv_fel_count <- mean(broward_clean$juv_fel_count)
mean_juv_misd_count <- mean(broward_clean$juv_misd_count)
mean_COMPAS_score <- mean(broward_clean$compas_decile_score)
sd_age <- sd(broward_clean$age)
sd_jfc <-sd(broward_clean$juv_fel_count)
sd_jmc <- sd(broward_clean$juv_misd_count)
sd_COMPAS <- sd(broward_clean$compas_decile_score)
summary_data <- data.frame(
Variable = c("Age", "Juv_Fel_Count", "Juv_Misd_Count", "COMPAS_Score"),
Mean = c(mean_age, mean_juv_fel_count, mean_juv_misd_count, mean_COMPAS_score),
SD = c(sd_age, sd_jfc, sd_jmc, sd_COMPAS)
)
num_observations <- length(na.omit(broward_clean$age))
summary_data <- data.frame(
Variable = c("Age", "Juv. Felony Count", "Juv. Misdemeanor Count", "COMPAS Score"),
Mean = c(mean_age, mean_juv_fel_count, mean_juv_misd_count, mean_COMPAS_score),
SD = c(sd_age, sd_jfc, sd_jmc, sd_COMPAS),
Num_Obs = num_observations
)
summary_table_gt <- summary_data %>%
gt() %>%
tab_spanner(
label = "Statistics",
columns = c("Mean", "SD", "Num_Obs")
) %>%
fmt_number(
columns = vars(Mean, SD),
decimals = 2
) %>%
tab_header(
title = "Summary Statistics",
subtitle = "for BROWARD_CLEAN"
)
summary_table_gt
#Replicate Table 1.2 (Accuracy Rates)
##COMPAS
accuracy_overall <- broward_clean |>
summarise(accuracy_overall = sum(compas_correct) / n())
accuracy_black <- broward_clean |>
filter(race == 2)|>
summarise(accuracy_black = sum(compas_correct) / n())
accuracy_white <- broward_clean |>
filter(race == 1)|>
summarise(accuracy_white = sum(compas_correct) / n())
broward_clean <- broward_clean |>
mutate(race = case_when(
race == 1 ~ "White",
race == 2 ~ "Black",
race == 3 ~ "Hispanic",
race == 4 ~ "Asian",
race == 5 ~ "Native American",
race == 6 ~ "Other"
))
broward_clean |>
group_by(race)|>
summarize(
race_accuracy = sum(compas_correct) / n(),
false_pos = sum(compas_correct == 0 & compas_guess == 1) / (sum(two_year_recid == 0)),
false_neg = sum(compas_correct == 0 & compas_guess == 0) / (sum(two_year_recid == 1))
) |>
mutate(
accuracy_overall = 0.654
)|>
filter(race %in% c("Black", "White"))
summary_data <- data.frame(
Variable = c("Age", "Juv. Felony Count", "Juv. Misdemeanor Count", "COMPAS Score"),
Mean = c(mean_age, mean_juv_fel_count, mean_juv_misd_count, mean_COMPAS_score),
SD = c(sd_age, sd_jfc, sd_jmc, sd_COMPAS),
Num Obs = num_observations
summary_data <- data.frame(
Variable = c("Age", "Juv. Felony Count", "Juv. Misdemeanor Count", "COMPAS Score"),
Mean = c(mean_age, mean_juv_fel_count, mean_juv_misd_count, mean_COMPAS_score),
SD = c(sd_age, sd_jfc, sd_jmc, sd_COMPAS),
Observations = num_observations
)
summary_table_gt <- summary_data %>%
gt() %>%
tab_spanner(
label = "Statistics",
columns = c("Mean", "SD", "Num_Obs")
) %>%
fmt_number(
columns = vars(Mean, SD),
decimals = 2
) %>%
tab_header(
title = "Summary Statistics",
subtitle = "for BROWARD_CLEAN"
)
summary_table_gt <- summary_data %>%
gt() %>%
tab_spanner(
label = "Statistics",
columns = c("Mean", "SD", "Observations")
) %>%
fmt_number(
columns = vars(Mean, SD),
decimals = 2
) %>%
tab_header(
title = "Summary Statistics",
subtitle = "for BROWARD_CLEAN"
)
summary_table_gt
summary_table_gt <- summary_data %>%
gt() %>%
tab_spanner(
label = "Statistics",
columns = c("Mean", "SD", "Observations")
) %>%
fmt_number(
columns = vars(Mean, SD),
decimals = 2
) %>%
tab_header(
title = "Defendant Summary Statistics",
subtitle = "for BROWARD_CLEAN"
)
summary_table_gt
summary_data <- data.frame(
Variable = c("Age", "Juvenile Felony Count", "Juvenile Misdemeanor Count", "COMPAS Score"),
Mean = c(mean_age, mean_juv_fel_count, mean_juv_misd_count, mean_COMPAS_score),
SD = c(sd_age, sd_jfc, sd_jmc, sd_COMPAS),
Observations = num_observations
)
summary_table_gt <- summary_data %>%
gt() %>%
tab_spanner(
label = "Statistics",
columns = c("Mean", "SD", "Observations")
) %>%
fmt_number(
columns = vars(Mean, SD),
decimals = 2
) %>%
tab_header(
title = "Defendant Summary Statistics",
subtitle = "for BROWARD_CLEAN"
)
summary_table_gt
summary_table_gt <- summary_data %>%
gt() %>%
tab_spanner(
label = "Statistics",
columns = c("Mean", "SD", "Obs")
) %>%
fmt_number(
columns = vars(Mean, SD),
decimals = 2
) %>%
tab_header(
title = "Defendant Summary Statistics",
subtitle = "for BROWARD_CLEAN"
)
num_observations <- length(na.omit(broward_clean$age))
summary_data <- data.frame(
Variable = c("Age", "Juvenile Felony Count", "Juvenile Misdemeanor Count", "COMPAS Score"),
Mean = c(mean_age, mean_juv_fel_count, mean_juv_misd_count, mean_COMPAS_score),
SD = c(sd_age, sd_jfc, sd_jmc, sd_COMPAS),
Obs = num_observations
)
summary_table_gt <- summary_data %>%
gt() %>%
tab_spanner(
label = "Statistics",
columns = c("Mean", "SD", "Obs")
) %>%
fmt_number(
columns = vars(Mean, SD),
decimals = 2
) %>%
tab_header(
title = "Defendant Summary Statistics",
subtitle = "for BROWARD_CLEAN"
)
summary_table_gt
summary_data
broward_clean |>
group_by(race)|>
summarize(
race_accuracy = sum(compas_correct) / n(),
false_pos = sum(compas_correct == 0 & compas_guess == 1) / (sum(two_year_recid == 0)),
false_neg = sum(compas_correct == 0 & compas_guess == 0) / (sum(two_year_recid == 1))
) |>
mutate(
accuracy_overall = accuracy_overall
)|>
filter(race %in% c("Black", "White"))
broward_clean |>
group_by(race)|>
summarize(
race_accuracy = sum(compas_correct) / n(),
false_pos = sum(compas_correct == 0 & compas_guess == 1) / (sum(two_year_recid == 0)),
false_neg = sum(compas_correct == 0 & compas_guess == 0) / (sum(two_year_recid == 1))
) |>
mutate(
accuracy_overall = accuracy_overall$accuracy_overall
)|>
filter(race %in% c("Black", "White"))
summary_data
accuracy_white
accuracy_white$accuracy_white
broward_clean |>
group_by(race)|>
summarize(
race_accuracy = sum(compas_correct) / n(),
false_pos = sum(compas_correct == 0 & compas_guess == 1) / (sum(two_year_recid == 0)),
false_neg = sum(compas_correct == 0 & compas_guess == 0) / (sum(two_year_recid == 1))
) |>
mutate(
accuracy_overall = accuracy_overall$accuracy_overall
)|>
filter(race %in% c("Black", "White"))
broward_clean
accuracies <- broward_clean |>
group_by(race)|>
summarize(
race_accuracy = sum(compas_correct) / n(),
false_pos = sum(compas_correct == 0 & compas_guess == 1) / (sum(two_year_recid == 0)),
false_neg = sum(compas_correct == 0 & compas_guess == 0) / (sum(two_year_recid == 1))
) |>
mutate(
accuracy_overall = accuracy_overall$accuracy_overall
)|>
filter(race %in% c("Black", "White"))
accuracies
accuracies$false_pos
accuracies$false_pos[1]
accuracies$race_accuracy[1]
accuracies$race_accuracy[Black]
accuracies$Black
accuracies[Black]
accuracies["Black"]
accuracies$race_accuracy[race == Black]
accuracies$race_accuracy["race" == Black]
accuracies$race_accuracy["race" == "Black"]
accuracies$race_accuracy[1]
accuracies
#Finalizing Table 1.2
accuracy_data <- data.frame(
"" = c("Accuracy (overall)", "AUC-ROC (overall)", "Accuracy", "False positive", "False Negative"),
White = c(accuracies$accuracy_overall, "NA", accuracies$race_accuracy[2], accuracies$race_accuracy[2], accuracies$false_pos[2], accuracies$false_neg[2]),
Black = c(accuracies$accuracy_overall, "NA", accuracies$race_accuracy[1], accuracies$race_accuracy[1], accuracies$false_pos[1], accuracies$false_neg[1])
)
#Finalizing Table 1.2
accuracy_data <- data.frame(
"" = c("Accuracy (overall)", "AUC-ROC (overall)", "Accuracy", "False positive", "False Negative"),
White = c(accuracies$accuracy_overall, NA , accuracies$race_accuracy[2], accuracies$race_accuracy[2], accuracies$false_pos[2], accuracies$false_neg[2]),
Black = c(accuracies$accuracy_overall, NA , accuracies$race_accuracy[1], accuracies$race_accuracy[1], accuracies$false_pos[1], accuracies$false_neg[1])
)
accuracies$accuracy_overall
#Finalizing Table 1.2
accuracy_data <- data.frame(
"" = c("Accuracy (overall)", "AUC-ROC (overall)", "Accuracy", "False positive", "False Negative"),
White = c(accuracies$accuracy_overall[2], NA , accuracies$race_accuracy[2], accuracies$race_accuracy[2], accuracies$false_pos[2], accuracies$false_neg[2]),
Black = c(accuracies$accuracy_overall[1], NA , accuracies$race_accuracy[1], accuracies$race_accuracy[1], accuracies$false_pos[1], accuracies$false_neg[1])
)
accuracies$race_accuracy[2]
accuracies$race_accuracy[2]
accuracies$false_pos[1
accuracies$false_pos[1]
accuracies$false_pos[1]
accuracies$false_pos[2]
accuracies$false_neg[2]
accuracies$false_neg[1]
#Finalizing Table 1.2
accuracy_data <- data.frame(
"" = c("Accuracy (overall)", "AUC-ROC (overall)", "Accuracy", "False positive", "False Negative"),
White = c(accuracies$accuracy_overall[2], NA , accuracies$race_accuracy[2], accuracies$false_pos[2], accuracies$false_neg[2]),
Black = c(accuracies$accuracy_overall[1], NA , accuracies$race_accuracy[1], accuracies$false_pos[1], accuracies$false_neg[1])
)
#Finalizing Table 1.2
accuracy_data <- data.frame(
Metric = c("Accuracy (overall)", "AUC-ROC (overall)", "Accuracy", "False positive", "False Negative"),
White = c(accuracies$accuracy_overall[2], NA , accuracies$race_accuracy[2], accuracies$false_pos[2], accuracies$false_neg[2]),
Black = c(accuracies$accuracy_overall[1], NA , accuracies$race_accuracy[1], accuracies$false_pos[1], accuracies$false_neg[1])
)
accuracy_data
#Finalizing Table 1.2
accuracy_data <- data.frame(
= c("Accuracy (overall)", "AUC-ROC (overall)", "Accuracy", "False positive", "False Negative"),
#Finalizing Table 1.2
accuracy_data <- data.frame(
. = c("Accuracy (overall)", "AUC-ROC (overall)", "Accuracy", "False positive", "False Negative"),
White = c(accuracies$accuracy_overall[2], NA , accuracies$race_accuracy[2], accuracies$false_pos[2], accuracies$false_neg[2]),
Black = c(accuracies$accuracy_overall[1], NA , accuracies$race_accuracy[1], accuracies$false_pos[1], accuracies$false_neg[1])
)
accuracy_data
#Finalizing Table 1.2
accuracy_data <- data.frame(
Rate = c("Accuracy (overall)", "AUC-ROC (overall)", "Accuracy", "False positive", "False Negative"),
White = c(accuracies$accuracy_overall[2], NA , accuracies$race_accuracy[2], accuracies$false_pos[2], accuracies$false_neg[2]),
Black = c(accuracies$accuracy_overall[1], NA , accuracies$race_accuracy[1], accuracies$false_pos[1], accuracies$false_neg[1])
)
accuracy_data
#Finalizing Table 1.2
accuracy_data <- data.frame(
Rate = c("Accuracy (overall)", "AUC-ROC (overall)", "Accuracy", "False positive", "False negative"),
White = c(accuracies$accuracy_overall[2], NA , accuracies$race_accuracy[2], accuracies$false_pos[2], accuracies$false_neg[2]),
Black = c(accuracies$accuracy_overall[1], NA , accuracies$race_accuracy[1], accuracies$false_pos[1], accuracies$false_neg[1])
)
accuracy_data
accuracies_table <- accuracy_data %>%
gt() %>%
tab_spanner(
label = "Rate by Race",
columns = c("White", "Black")
) %>%
fmt_number(
columns = vars(Rate, White, Black),
decimals = 2
) %>%
tab_header(
title = "COMPAS algorithmic predictions from 1000 defendants",
subtitle = "Accuracies by Race"
)
accuracies_table
#Finalizing Table 1.2
accuracy_data <- data.frame(
. = c("Accuracy (overall)", "AUC-ROC (overall)", "Accuracy", "False positive", "False negative"),
White = c(accuracies$accuracy_overall[2], NA , accuracies$race_accuracy[2], accuracies$false_pos[2], accuracies$false_neg[2]),
Black = c(accuracies$accuracy_overall[1], NA , accuracies$race_accuracy[1], accuracies$false_pos[1], accuracies$false_neg[1])
)
accuracies_table <- accuracy_data %>%
gt() %>%
tab_spanner(
label = "Defendangt Race",
columns = c("White", "Black")
) %>%
fmt_number(
columns = vars(Rate, White, Black),
decimals = 2
) %>%
tab_header(
title = "COMPAS algorithmic predictions from 1000 defendants",
subtitle = "Accuracies by Race"
)
accuracies_table <- accuracy_data %>%
gt() %>%
tab_spanner(
label = "Defendangt Race",
columns = c("White", "Black")
) %>%
fmt_number(
columns = vars(White, Black),
decimals = 2
) %>%
tab_header(
title = "COMPAS algorithmic predictions from 1000 defendants",
subtitle = "Accuracies by Race"
)
accuracies_table
accuracies_table <- accuracy_data %>%
gt() %>%
tab_spanner(
label = "Defendant Race",
columns = c("White", "Black")
) %>%
fmt_number(
columns = vars(White, Black),
decimals = 2
) %>%
tab_header(
title = "COMPAS algorithmic predictions from 1000 defendants",
subtitle = "Accuracies by Race"
)
accuracies_table
accuracies_table <- accuracy_data %>%
gt() %>%
tab_spanner(
label = "Defendant Race",
columns = c("White", "Black")
) %>%
fmt_number(
columns = vars(White, Black),
decimals = 3
) %>%
tab_header(
title = "COMPAS algorithmic predictions from 1000 defendants",
subtitle = "Accuracies by Race"
)
accuracies_table
accuracies_table <- accuracy_data %>%
gt() %>%
tab_spanner(
label = "Defendant Race",
columns = c("White", "Black")
) %>%
fmt_percent(
columns = vars(White, Black),
decimals = 2
) %>%
tab_header(
title = "COMPAS algorithmic predictions from 1000 defendants",
subtitle = "Accuracies by Race"
)
accuracies_table
accuracies_table <- accuracy_data %>%
gt() %>%
tab_spanner(
label = "Defendant Race",
columns = c("White", "Black")
) %>%
fmt_percent(
columns = vars(White, Black),
decimals = 2
) %>%
tab_header(
title = "COMPAS algorithmic predictions from 1000 defendants",
subtitle = "Accuracy by defendant race"
)
accuracies_table
accuracies_table <- accuracy_data %>%
gt() %>%
tab_spanner(
label = "Defendant Race",
columns = c("White", "Black")
) %>%
fmt_percent(
columns = vars(White, Black),
decimals = 1
) %>%
tab_header(
title = "COMPAS algorithmic predictions from 1000 defendants",
subtitle = "Accuracy by defendant race"
)
accuracies_table
accuracies_table <- accuracy_data %>%
gt() %>%
tab_spanner(
label = "Defendant Race",
columns = c("White", "Black")
) %>%
fmt_percent(
columns = vars(White, Black),
decimals = 1
) %>%
tab_header(
title = "COMPAS algorithmic predictions from 1000 defendants",
subtitle = "COMPAS accuracy by defendant race"
)
accuracies_table
install.packages("pROC")
library(pROC)
------------------------------------------------------------------
#Table 2 - Making predictions
all_predictors <- c("age", "sex", "juv_misd_count", "juv_fel_count", "charge_id", "charge_degree")
------------------------------------------------------------------
#Table 2 - Making predictions
all_predictors <- c("age", "sex", "juv_misd_count", "juv_fel_count", "charge_id", "charge_degree")
all_predictors <- c("age", "sex", "juv_misd_count", "juv_fel_count", "charge_id", "charge_degree")
all_predictors
all_form <- as.formula(two_year_recid ~ all_predictors)
all_form
model1 <- glm(all_form, data = broward_clean)
all_form <- as.formula(two_year_recid ~ "age", "sex", "juv_misd_count", "juv_fel_count", "charge_id", "charge_degree")
form1 <- as.formula(two_year_recid ~ "age" + "sex" + "juv_misd_count" + "juv_fel_count" + "charge_id" + "charge_degree")
model1 <- glm(form1, data = broward_clean)
model1 <- glm(form1, data = "broward_clean")
broward_clean
form1
form1 <- as.formula(two_year_recid ~ age + sex + juv_misd_count + juv_fel_count + charge_id + charge_degree)
model1 <- glm(form1, data = "broward_clean")
model1 <- glm(form1, data = broward_clean)
kitchen3 <- as.formula(paste0("high_injury_rate ~ ",
paste(setdiff(names(osha), c("id","injury_rate","high_injury_rate","injuries")), collapse = " + ")))
model1 <- glm(form1, data = broward_clean, family = binomial)
form1
broward_clean
colnames(broward_clean)
